buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'jacoco'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1' //Body type parsing
    implementation 'org.postgresql:postgresql:42.7.3'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.2.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    implementation 'org.mindrot:jbcrypt:0.4'
}

tasks.named("test", Test.class, test -> {
    test.useJUnitPlatform();
    test.finalizedBy("jacocoTestReport");

    test.testLogging(logging -> {
        logging.events("PASSED", "SKIPPED", "FAILED");
        logging.exceptionFormat("FULL");
        logging.setShowExceptions(true);
        logging.setShowCauses(true);
        logging.setShowStackTraces(true);
    });

    test.afterSuite((desc, result) -> {
        if (desc.getParent() == null) {
            System.out.println("Test summary: " + result.getTestCount() + " run, " +
                    result.getSuccessfulTestCount() + " passed, " +
                    result.getFailedTestCount() + " failed, " +
                    result.getSkippedTestCount() + " skipped");
        }
    });
});

tasks.named("jacocoTestReport", JacocoReport.class, jacocoTestReport -> {
    jacocoTestReport.dependsOn(tasks.named("test"));
});